name: NextShift CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Prevent concurrent runs on same ref
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate-pwa:
    name: Validate PWA
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Validate JavaScript
        run: |
          echo "Validating TypeScript and React files..."
          npx tsc --noEmit
          echo "✅ JavaScript syntax is valid"

      - name: Run code quality checks
        run: |
          echo "Running Biome linting and tests..."
          npm run lint
          npm run test
          echo "✅ All quality checks passed"

      - name: Build and check PWA
        run: |
          echo "Building PWA with Vite..."
          npm run build

          echo "Checking built PWA requirements..."
          # Core source files (Vite structure)
          [ -f "index.html" ] && echo "✅ index.html found" || { echo "❌ index.html missing"; exit 1; }
          [ -f "src/styles/main.css" ] && echo "✅ src/styles/main.css found" || { echo "❌ src/styles/main.css missing"; exit 1; }
          [ -f "src/App.tsx" ] && echo "✅ src/App.tsx found" || { echo "❌ src/App.tsx missing"; exit 1; }

          # Built PWA files (auto-generated by Vite)
          [ -f "dist/index.html" ] && echo "✅ Built index.html found" || { echo "❌ Built index.html missing"; exit 1; }
          [ -f "dist/manifest.webmanifest" ] && echo "✅ Auto-generated manifest found" || { echo "❌ Manifest missing"; exit 1; }
          
          # Check for built CSS (Vite generates hashed filenames)
          if ls dist/assets/*.css 1> /dev/null 2>&1; then
            echo "✅ Built CSS files found"
          else
            echo "❌ Built CSS files missing"
            exit 1
          fi
          
          # Check for built JS (Vite generates hashed filenames)  
          if ls dist/assets/*.js 1> /dev/null 2>&1; then
            echo "✅ Built JS files found"
          else
            echo "❌ Built JS files missing"
            exit 1
          fi

          # PWA assets (moved to public/assets structure)
          [ -f "public/assets/icons/icon-192.png" ] && echo "✅ 192px icon found" || { echo "❌ 192px icon missing"; exit 1; }
          [ -f "public/assets/icons/icon-512.png" ] && echo "✅ 512px icon found" || { echo "❌ 512px icon missing"; exit 1; }

          echo "✅ All PWA requirements met"

      - name: Calculate bundle size
        run: |
          echo "Calculating built PWA bundle size..."

          # Calculate built bundle size
          DIST_SIZE=$(du -sb dist/ | cut -f1)
          ICONS_SIZE=$(du -sb public/assets/icons/ | cut -f1)
          TOTAL_SIZE=$((DIST_SIZE + ICONS_SIZE))
          TOTAL_KB=$(( (TOTAL_SIZE + 1023) / 1024 ))

          echo "📊 Bundle Size Analysis:"
          echo "├── Built assets: $(( (DIST_SIZE + 1023) / 1024 ))KB"
          echo "├── Icons: $(( (ICONS_SIZE + 1023) / 1024 ))KB"
          echo "└── Total: ${TOTAL_KB}KB"

          # List built files for transparency
          echo ""
          echo "📁 Built files:"
          find dist -type f -exec ls -lh {} \; | awk '{print "├── " $9 ": " $5}'

          # Bundle size check (warn if over 500KB)
          if [ $TOTAL_KB -gt 500 ]; then
            echo "⚠️  Bundle size is large (${TOTAL_KB}KB > 500KB)"
          else
            echo "✅ Bundle size is optimal (${TOTAL_KB}KB)"
          fi

          # Save for PR comment
          echo "BUNDLE_SIZE=${TOTAL_KB}KB" >> $GITHUB_ENV

      - name: Validate PWA manifest
        run: |
          echo "Validating auto-generated PWA manifest..."

          # Check built manifest
          node -e "
            const manifest = JSON.parse(require('fs').readFileSync('dist/manifest.webmanifest', 'utf8'));
            const required = ['name', 'short_name', 'icons', 'start_url', 'display'];

            required.forEach(field => {
              if (!manifest[field]) {
                console.log(\`❌ Missing required field: \${field}\`);
                process.exit(1);
              } else {
                console.log(\`✅ \${field}: \${JSON.stringify(manifest[field]).substring(0, 50)}...\`);
              }
            });

            // Check icons
            if (!manifest.icons || manifest.icons.length === 0) {
              console.log('❌ No icons defined in manifest');
              process.exit(1);
            }

            console.log('✅ Auto-generated PWA manifest is valid');
          "

      - name: Check shift calculation accuracy
        run: |
          echo "Testing shift calculation logic..."

          # Basic test - check if core utility files exist
          echo "Checking React app structure..."
          [ -f "src/utils/shiftCalculations.ts" ] && echo "✅ Shift calculations utility found" || { echo "❌ Shift calculations missing"; exit 1; }
          [ -f "src/hooks/useShiftCalculation.ts" ] && echo "✅ Shift calculation hook found" || { echo "❌ Shift calculation hook missing"; exit 1; }
          [ -f "src/components/TeamSelector.tsx" ] && echo "✅ TeamSelector component found" || { echo "❌ TeamSelector component missing"; exit 1; }
          echo "✅ React app structure validated"

      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const bundleSize = process.env.BUNDLE_SIZE;

            const comment = `## 🚀 PWA Validation Results

            ✅ All PWA requirements met
            ✅ Code quality checks passed (Biome)
            ✅ Tests passed (Vitest)
            ✅ Build successful (Vite)
            ✅ Auto-generated manifest valid
            ✅ Required icons present
            ✅ Core shift functions present

            📊 **Bundle Size:** ${bundleSize}

            Ready for deployment! 🎉`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
