name: PR Preview Build

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'src/**'
      - 'public/**'
      - 'index.html'
      - 'package.json'
      - 'vite.config.ts'
      - 'tsconfig.json'

# Prevent concurrent preview builds for the same PR
concurrency:
  group: pr-preview-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  build-preview:
    name: Build PR Preview
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Generate preview version
        id: version
        run: |
          PR_VERSION="PR-${{ github.event.number }}-$(echo ${{ github.event.pull_request.head.sha }} | cut -c1-7)"
          echo "PR_VERSION=$PR_VERSION" >> $GITHUB_OUTPUT
          echo "Building preview version: $PR_VERSION"
          
          # Update package.json with preview version for build
          npm version --no-git-tag-version "$PR_VERSION" --allow-same-version

      - name: Run quality checks
        run: |
          echo "Running code quality checks for PR preview..."
          npm run lint
          npm run test

      - name: Build PR preview
        run: |
          echo "Building NextShift PR preview..."
          echo "Version: ${{ steps.version.outputs.PR_VERSION }}"
          npm run build

      - name: Generate preview metadata
        run: |
          # Create preview info
          cat > dist/preview-info.json << EOF
          {
            "pr_number": ${{ github.event.number }},
            "pr_title": "${{ github.event.pull_request.title }}",
            "commit_sha": "${{ github.event.pull_request.head.sha }}",
            "commit_sha_short": "$(echo ${{ github.event.pull_request.head.sha }} | cut -c1-7)",
            "version": "${{ steps.version.outputs.PR_VERSION }}",
            "build_time": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "author": "${{ github.event.pull_request.user.login }}",
            "base_branch": "${{ github.event.pull_request.base.ref }}",
            "head_branch": "${{ github.event.pull_request.head.ref }}"
          }
          EOF

          # Add preview banner to index.html
          sed -i 's/<title>NextShift/<title>[PR Preview] NextShift/' dist/index.html
          
          echo "✅ Preview build completed for PR #${{ github.event.number }}"

      - name: Calculate bundle size
        id: bundle-size
        run: |
          DIST_SIZE=$(du -sb dist/ | cut -f1)
          DIST_KB=$(( (DIST_SIZE + 1023) / 1024 ))
          echo "BUNDLE_SIZE_KB=$DIST_KB" >> $GITHUB_OUTPUT
          echo "Preview bundle size: ${DIST_KB}KB"

      - name: Upload PR preview artifact
        uses: actions/upload-artifact@v4
        with:
          name: nextshift-pr-${{ github.event.number }}-preview
          path: dist/
          retention-days: 14
          compression-level: 6

      - name: Comment on PR with preview info
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.issue.number;
            const version = "${{ steps.version.outputs.PR_VERSION }}";
            const bundleSize = "${{ steps.bundle-size.outputs.BUNDLE_SIZE_KB }}";
            const commitSha = "${{ github.event.pull_request.head.sha }}".substring(0, 7);

            const comment = `## 📦 PR Preview Build

            ✅ **Preview build completed successfully!**

            ### 📋 Build Details
            - **Version**: \`${version}\`
            - **Commit**: \`${commitSha}\`
            - **Bundle Size**: ${bundleSize}KB
            - **Build Time**: ${new Date().toISOString()}

            ### 🔍 Testing Instructions
            1. **Download the preview**: Go to the [Actions tab](../../actions/runs/${{ github.run_id }}) and download the \`nextshift-pr-${prNumber}-preview\` artifact
            2. **Test locally**: Extract the files and serve them with any static server (e.g., \`npx serve dist\`)
            3. **Verify changes**: Test the specific functionality modified in this PR

            ### 📊 Quality Checks
            - ✅ Code quality (Biome)
            - ✅ Tests passed (Vitest)
            - ✅ Build successful (Vite)
            - ✅ Bundle size: ${bundleSize}KB

            > 💡 **Note**: This is a testing build only. Production deployment happens automatically when this PR is merged and a release tag is created.

            ---
            *Preview build for PR #${prNumber} • Generated by NextShift CI*`;

            // Check if we already commented on this PR
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber
            });

            const existingComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('📦 PR Preview Build')
            );

            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: comment
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: comment
              });
            }