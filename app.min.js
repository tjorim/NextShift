const CONFIG={VERSION:"3.0.0",REFERENCE_DATE:new Date("2025-01-06"),REFERENCE_TEAM:1,SHIFT_CYCLE_DAYS:10,TEAMS_COUNT:5},SHIFTS={MORNING:{code:"M",name:"Morning",hours:"07:00-15:00",start:7,end:15},EVENING:{code:"E",name:"Evening",hours:"15:00-23:00",start:15,end:23},NIGHT:{code:"N",name:"Night",hours:"23:00-07:00",start:23,end:7},OFF:{code:"O",name:"Off",hours:"Not working",start:null,end:null}};dayjs.extend(dayjs_plugin_weekOfYear),dayjs.extend(dayjs_plugin_timezone),dayjs.extend(dayjs_plugin_utc),dayjs.extend(dayjs_plugin_isSameOrBefore),dayjs.extend(dayjs_plugin_isSameOrAfter),dayjs.extend(dayjs_plugin_localizedFormat);let userTeam=null,currentViewDate=dayjs(),elements={};function initializeElements(){elements={teamModal:new bootstrap.Modal(document.getElementById("teamModal")),connectionStatus:document.getElementById("connectionStatus"),currentDate:document.getElementById("currentDate"),myTeamShift:document.getElementById("myTeamShift"),nextShift:document.getElementById("nextShift"),todayShifts:document.getElementById("todayShifts"),scheduleView:document.getElementById("scheduleView"),transferInfo:document.getElementById("transferInfo"),compareTeam:document.getElementById("compareTeam"),changeTeamBtn:document.getElementById("changeTeamBtn"),todayBtn:document.getElementById("todayBtn"),prevBtn:document.getElementById("prevBtn"),currentBtn:document.getElementById("currentBtn"),nextBtn:document.getElementById("nextBtn")}}function initializeApp(){userTeam=localStorage.getItem("userTeam"),userTeam?(userTeam=parseInt(userTeam),updateCompareTeamOptions(),updateAllViews()):elements.teamModal.show(),updateVersionDisplays(),"serviceWorker"in navigator&&navigator.serviceWorker.register("serviceWorker.js").then(e=>{console.log("ServiceWorker registered"),getServiceWorkerVersion()}).catch(e=>console.log("ServiceWorker registration failed"))}function setupEventListeners(){document.querySelectorAll(".team-btn").forEach(e=>{e.addEventListener("click",function(){selectTeam(parseInt(this.dataset.team))})}),elements.changeTeamBtn.addEventListener("click",function(){elements.teamModal.show()}),elements.todayBtn.addEventListener("click",function(){currentViewDate=dayjs(),updateAllViews()}),elements.prevBtn.addEventListener("click",function(){currentViewDate=currentViewDate.subtract(7,"day"),updateScheduleView()}),elements.currentBtn.addEventListener("click",function(){currentViewDate=dayjs(),updateScheduleView()}),elements.nextBtn.addEventListener("click",function(){currentViewDate=currentViewDate.add(7,"day"),updateScheduleView()}),elements.compareTeam.addEventListener("change",function(){updateTransferView()}),document.querySelectorAll('[data-bs-toggle="tab"]').forEach(e=>{e.addEventListener("shown.bs.tab",function(e){const t=e.target.getAttribute("data-bs-target");"#schedule"===t?updateScheduleView():"#transfer"===t&&updateTransferView()})}),window.addEventListener("online",updateOnlineStatus),window.addEventListener("offline",updateOnlineStatus)}function selectTeam(e){userTeam=e,localStorage.setItem("userTeam",e.toString()),elements.teamModal.hide(),updateCompareTeamOptions(),updateAllViews()}function updateCompareTeamOptions(){elements.compareTeam.innerHTML="";for(let e=1;e<=CONFIG.TEAMS_COUNT;e++)if(e!==userTeam){const t=document.createElement("option");t.value=e,t.textContent=`Team ${e}`,elements.compareTeam.appendChild(t)}}function getCurrentShiftDay(){const e=dayjs();return e.hour()<7?e.subtract(1,"day"):e}function isCurrentShiftDay(e){const t=getCurrentShiftDay();return dayjs(e).isSame(t,"day")}function getWeekRange(e){const t=dayjs(e).startOf("week").add(1,"day"),n=t.add(6,"day");return{start:t,end:n}}function isSameDay(e,t){return dayjs(e).isSame(dayjs(t),"day")}function calculateShift(e,t){const n=dayjs(e).startOf("day"),a=dayjs(CONFIG.REFERENCE_DATE).startOf("day"),s=((n.diff(a,"day")-2*(t-CONFIG.REFERENCE_TEAM))%CONFIG.SHIFT_CYCLE_DAYS+CONFIG.SHIFT_CYCLE_DAYS)%CONFIG.SHIFT_CYCLE_DAYS;return s<2?SHIFTS.MORNING:s<4?SHIFTS.EVENING:s<6?SHIFTS.NIGHT:SHIFTS.OFF}function formatDateCode(e){const t=dayjs(e);return`${t.year().toString().slice(-2)}${t.week().toString().padStart(2,"0")}.${0===t.day()?7:t.day()}`}function getShiftCode(e,t){const n=calculateShift(e,t),a=formatDateCode(e);if(n===SHIFTS.NIGHT){return`${formatDateCode(dayjs(e).subtract(1,"day"))}${n.code}`}return`${a}${n.code}`}function getNextShift(e,t){let n=dayjs(e).add(1,"day");for(let e=0;e<CONFIG.SHIFT_CYCLE_DAYS;e++){const e=calculateShift(n,t);if(e!==SHIFTS.OFF)return{date:n,shift:e,code:getShiftCode(n,t)};n=n.add(1,"day")}return null}function getTransferDays(e,t,n,a=14){const s=[];for(let r=0;r<a;r++){const a=dayjs(n).add(r,"day"),d=calculateShift(a,e),o=calculateShift(a,t);if(d!==SHIFTS.OFF&&o!==SHIFTS.OFF){const n=getShiftOrder(d),r=getShiftOrder(o);(n+1)%3!==r&&(r+1)%3!==n||s.push({date:a,myShift:d,otherShift:o,myCode:getShiftCode(a,e),otherCode:getShiftCode(a,t),type:(n+1)%3===r?"handover":"takeover"})}}return s}function getShiftOrder(e){return e===SHIFTS.MORNING?0:e===SHIFTS.EVENING?1:e===SHIFTS.NIGHT?2:-1}function updateAllViews(){updateCurrentStatus(),updateTodayView(),document.querySelector("#schedule-tab").classList.contains("active")&&updateScheduleView(),document.querySelector("#transfer-tab").classList.contains("active")&&updateTransferView()}function updateCurrentStatus(){const e=dayjs(),t=getCurrentShiftDay(),n=formatDateCode(t),a=calculateShift(t,userTeam),s=getNextShift(t,userTeam),r=isCurrentShiftDay(e)&&e.hour()<7?`${t.format("dddd, MMMM D, YYYY")} (Night shift from ${e.subtract(1,"day").format("MMM D")})`:`${e.format("dddd, MMMM D, YYYY")}`;elements.currentDate.textContent=`${r} (${n})`;const d=e.hour();let o=a.hours;a!==SHIFTS.OFF&&(a===SHIFTS.NIGHT&&d<7?o=`${a.hours} (ends at 07:00)`:a===SHIFTS.MORNING&&d<7?o=`${a.hours} (starts at 07:00)`:a===SHIFTS.EVENING&&d<15?o=`${a.hours} (starts at 15:00)`:a===SHIFTS.NIGHT&&d<23&&(o=`${a.hours} (starts at 23:00)`));const i=`\n        <div class="d-flex align-items-center">\n            <span class="badge shift-${a.name.toLowerCase()} me-2 shift-code">${a.code}</span>\n            <div>\n                <div class="fw-bold">Team ${userTeam} - ${a.name}</div>\n                <small class="text-muted">${o}</small>\n            </div>\n        </div>\n    `;elements.myTeamShift.innerHTML=i,elements.nextShift.innerHTML=s?`\n            <small class="text-muted">Next shift:</small><br>\n            <strong>${s.shift.name}</strong> on ${s.date.format("ddd, MMM D")} (${s.code})\n        `:'<small class="text-muted">No upcoming shifts found</small>'}function updateTodayView(){const e=getCurrentShiftDay(),t=[];for(let n=1;n<=CONFIG.TEAMS_COUNT;n++){const a=calculateShift(e,n),s=getShiftCode(e,n),r=n===userTeam,d=isCurrentShiftDay(e)&&n===userTeam;t.push(`\n            <div class="col-12 col-sm-6 col-lg-4 col-xl-3">\n                <div class="card h-100 ${r?"my-team":""} ${d?"border-success border-2":""}">\n                    <div class="card-body text-center">\n                        <h6 class="card-title">\n                            Team ${n}\n                            ${d?'<span class="badge bg-success ms-1">Active</span>':""}\n                        </h6>\n                        <span class="badge shift-${a.name.toLowerCase()} shift-code mb-2">${s}</span>\n                        <div class="small text-muted">${a.name}</div>\n                        <div class="small text-muted">${a.hours}</div>\n                    </div>\n                </div>\n            </div>\n        `)}elements.todayShifts.innerHTML=t.join("")}function updateScheduleView(){const e=getWeekRange(currentViewDate),t=[];for(let n=0;n<7;n++)t.push(e.start.add(n,"day"));const n=getCurrentShiftDay();let a=`\n        <table class="table table-bordered schedule-table">\n            <thead>\n                <tr>\n                    <th class="team-header">Team</th>\n                    ${t.map(e=>{const t=isSameDay(e,n);return`<th class="${t?"bg-light border-success":""}">${e.format("ddd")}<br><small>${e.format("M/D")}</small>${t?'<br><span class="badge badge-sm bg-success">Today</span>':""}</th>`}).join("")}\n                </tr>\n            </thead>\n            <tbody>\n    `;for(let e=1;e<=CONFIG.TEAMS_COUNT;e++){a+=`<tr ${e===userTeam?'class="table-primary"':""}>`,a+=`<td class="team-header">Team ${e}</td>`,t.forEach(t=>{const s=calculateShift(t,e),r=isSameDay(t,n),d=r&&e===userTeam;a+=`\n                <td class="${r?"bg-light":""} ${d?"border-success border-2":""}">\n                    <span class="badge shift-${s.name.toLowerCase()} shift-code">${s.code}</span>\n                    <br><small>${s.name}</small>\n                    ${d?'<br><span class="badge badge-sm bg-success">Active</span>':""}\n                </td>\n            `}),a+="</tr>"}a+="</tbody></table>",elements.scheduleView.innerHTML=a}function updateTransferView(){const e=parseInt(elements.compareTeam.value);if(!e||e===userTeam)return;const t=getCurrentShiftDay(),n=getTransferDays(userTeam,e,t);if(0===n.length)return void(elements.transferInfo.innerHTML=`\n            <div class="alert alert-info">\n                No transfers found between Team ${userTeam} and Team ${e} in the next 14 days.\n            </div>\n        `);let a=`\n        <div class="alert alert-info">\n            <strong>Transfers between Team ${userTeam} and Team ${e}:</strong>\n        </div>\n        <div class="row g-3">\n    `;n.forEach(n=>{const s="handover"===n.type?"success":"warning",r="handover"===n.type?"You hand over to":"You take over from",d=isSameDay(n.date,t);a+=`\n            <div class="col-12 col-md-6">\n                <div class="card border-${s} ${d?"border-3 bg-light":""}">\n                    <div class="card-body">\n                        <div class="d-flex justify-content-between align-items-start">\n                            <div>\n                                <h6 class="card-title">\n                                    ${n.date.format("ddd, MMM D")}\n                                    ${d?'<span class="badge bg-success ms-1">Today</span>':""}\n                                </h6>\n                                <p class="card-text small mb-1">${r} Team ${e}</p>\n                                <div class="d-flex gap-2">\n                                    <span class="badge shift-${n.myShift.name.toLowerCase()}">${n.myCode}</span>\n                                    <span class="text-muted">→</span>\n                                    <span class="badge shift-${n.otherShift.name.toLowerCase()}">${n.otherCode}</span>\n                                </div>\n                                ${d?'<small class="text-success fw-bold">Active transfer day</small>':""}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `}),a+="</div>",elements.transferInfo.innerHTML=a}function checkOnlineStatus(){updateOnlineStatus(),setInterval(updateOnlineStatus,3e4)}function updateOnlineStatus(){const e=navigator.onLine;elements.connectionStatus.textContent=e?"Online":"Offline",elements.connectionStatus.className="badge "+(e?"bg-success":"bg-danger")}function updateVersionDisplays(){document.querySelectorAll("#appVersion, #aboutVersion").forEach(e=>{e&&(e.textContent=`v${CONFIG.VERSION}`)})}function getServiceWorkerVersion(){if("serviceWorker"in navigator&&navigator.serviceWorker.controller){const e=new MessageChannel;e.port1.onmessage=function(e){const t=document.getElementById("swVersion");t&&e.data&&e.data.version&&(t.textContent=e.data.version)},navigator.serviceWorker.controller.postMessage({type:"GET_VERSION"},[e.port2])}}document.addEventListener("DOMContentLoaded",function(){initializeElements(),initializeApp(),setupEventListeners(),checkOnlineStatus()}),setInterval(function(){userTeam&&updateCurrentStatus()},6e4);